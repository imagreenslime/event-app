{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shane\\\\PycharmProjects\\\\4\\\\react-express-app\\\\client\\\\src\\\\components\\\\FederationForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Form, ToggleButton, ToggleButtonGroup } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FederationForm(_ref) {\n  _s();\n  let {\n    federations\n  } = _ref;\n  const [federationValue, setfederationValue] = useState([]);\n  const handleChange = val => setValue(val);\n  return /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n    type: \"checkbox\",\n    value: federationValue,\n    onChange: handleChange,\n    children: federations.map((federation, index) => {\n      return /*#__PURE__*/_jsxDEV(ToggleButton, {\n        id: `tbg-btn${index}`,\n        value: index,\n        children: federation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n/*\r\nexport default function FederationForm({federations}){\r\n  return (\r\n    <div>\r\n      <Form>\r\n      { federations.map(federation => {\r\n          return (\r\n            <Form.Check\r\n            type=\"switch\"\r\n            id=\"custom-switch\"\r\n            label={federation}\r\n            />\r\n          )\r\n          })\r\n        }\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n*/\n_s(FederationForm, \"CvFmij9Gc8vhs/5z1VJ5DSgA1gY=\");\n_c = FederationForm;\nvar _c;\n$RefreshReg$(_c, \"FederationForm\");","map":{"version":3,"names":["React","useState","Form","ToggleButton","ToggleButtonGroup","jsxDEV","_jsxDEV","FederationForm","_ref","_s","federations","federationValue","setfederationValue","handleChange","val","setValue","type","value","onChange","children","map","federation","index","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/shane/PycharmProjects/4/react-express-app/client/src/components/FederationForm.js"],"sourcesContent":["import React, {useState} from 'react'\r\nimport { Form, ToggleButton, ToggleButtonGroup } from 'react-bootstrap';\r\n\r\nexport default function FederationForm({ federations }){\r\n  const [federationValue, setfederationValue] = useState([])\r\n  const handleChange = (val) => setValue(val);\r\n  return (\r\n    <ToggleButtonGroup type=\"checkbox\" value={federationValue} onChange={handleChange}>\r\n      {federations.map((federation, index) => {\r\n        return (\r\n          <ToggleButton id={`tbg-btn${index}`} value={index}>\r\n            {federation}\r\n          </ToggleButton>\r\n          )\r\n        })\r\n      }\r\n  </ToggleButtonGroup>\r\n  )\r\n}\r\n/*\r\nexport default function FederationForm({federations}){\r\n  return (\r\n    <div>\r\n      <Form>\r\n      { federations.map(federation => {\r\n          return (\r\n            <Form.Check\r\n            type=\"switch\"\r\n            id=\"custom-switch\"\r\n            label={federation}\r\n            />\r\n          )\r\n          })\r\n        }\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n*/\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAASC,IAAI,EAAEC,YAAY,EAAEC,iBAAiB,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExE,eAAe,SAASC,cAAcA,CAAAC,IAAA,EAAiB;EAAAC,EAAA;EAAA,IAAhB;IAAEC;EAAY,CAAC,GAAAF,IAAA;EACpD,MAAM,CAACG,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAMY,YAAY,GAAIC,GAAG,IAAKC,QAAQ,CAACD,GAAG,CAAC;EAC3C,oBACER,OAAA,CAACF,iBAAiB;IAACY,IAAI,EAAC,UAAU;IAACC,KAAK,EAAEN,eAAgB;IAACO,QAAQ,EAAEL,YAAa;IAAAM,QAAA,EAC/ET,WAAW,CAACU,GAAG,CAAC,CAACC,UAAU,EAAEC,KAAK,KAAK;MACtC,oBACEhB,OAAA,CAACH,YAAY;QAACoB,EAAE,EAAG,UAASD,KAAM,EAAE;QAACL,KAAK,EAAEK,KAAM;QAAAH,QAAA,EAC/CE;MAAU;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAEjB,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEW,CAAC;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBAlB,EAAA,CAhBwBF,cAAc;AAAAqB,EAAA,GAAdrB,cAAc;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}