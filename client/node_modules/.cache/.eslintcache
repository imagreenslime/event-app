[{"C:\\Users\\shane\\PycharmProjects\\4\\react-express-app\\client\\src\\index.js":"1","C:\\Users\\shane\\PycharmProjects\\4\\react-express-app\\client\\src\\components\\FederationForm.js":"2","C:\\Users\\shane\\PycharmProjects\\4\\react-express-app\\client\\src\\components\\Map.js":"3","C:\\Users\\shane\\PycharmProjects\\4\\react-express-app\\client\\src\\components\\TableList.js":"4","C:\\Users\\shane\\PycharmProjects\\4\\react-express-app\\client\\src\\components\\PageSelector.js":"5","C:\\Users\\shane\\PycharmProjects\\4\\react-express-app\\client\\src\\components\\Navigation.js":"6","C:\\Users\\shane\\PycharmProjects\\4\\react-express-app\\client\\src\\pages\\Requirements.js":"7","C:\\Users\\shane\\PycharmProjects\\4\\react-express-app\\client\\src\\pages\\Home.js":"8","C:\\Users\\shane\\PycharmProjects\\4\\react-express-app\\client\\src\\App.js":"9","C:\\Users\\shane\\PycharmProjects\\4\\react-express-app\\client\\src\\functions\\filters.js":"10","C:\\Users\\shane\\PycharmProjects\\4\\react-express-app\\client\\src\\pages\\Equipment.js":"11"},{"size":371,"mtime":1697394808074,"results":"12","hashOfConfig":"13"},{"size":1707,"mtime":1696898811906,"results":"14","hashOfConfig":"13"},{"size":804,"mtime":1695588379536,"results":"15","hashOfConfig":"13"},{"size":914,"mtime":1697080052759,"results":"16","hashOfConfig":"13"},{"size":958,"mtime":1697395024088,"results":"17","hashOfConfig":"13"},{"size":761,"mtime":1697394680427,"results":"18","hashOfConfig":"13"},{"size":89,"mtime":1697394592564,"results":"19","hashOfConfig":"13"},{"size":4044,"mtime":1697394914646,"results":"20","hashOfConfig":"13"},{"size":692,"mtime":1697394879536,"results":"21","hashOfConfig":"13"},{"size":1432,"mtime":1696704767065,"results":"22","hashOfConfig":"13"},{"size":86,"mtime":1697394851203,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"287wad",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\shane\\PycharmProjects\\4\\react-express-app\\client\\src\\index.js",[],[],"C:\\Users\\shane\\PycharmProjects\\4\\react-express-app\\client\\src\\components\\FederationForm.js",[],[],"C:\\Users\\shane\\PycharmProjects\\4\\react-express-app\\client\\src\\components\\Map.js",["61","62"],[],"import React, {useEffect, useState} from 'react';\r\nimport USAMap from \"react-usa-map\";\r\nimport '../styles/App.css'\r\n\r\nexport default function Map({ stateList, setStateList }){\r\n    const mapHandler = (event) => {\r\n        let newState = event.target.dataset.name\r\n        if (stateList.includes(newState, 0)){\r\n            setStateList(stateList.filter(e => e !== newState))\r\n        } else {\r\n            setStateList([...stateList, newState])\r\n        }\r\n    }\r\n\r\n    const stateConfig = {}\r\n    for (let i = 0 ; i < stateList.length; i++){\r\n        stateConfig[stateList[i]] = {fill: \"navy\"}\r\n    }\r\n    const statesCustomConfig = () => {\r\n        return (\r\n            stateConfig\r\n        )\r\n    }\r\n\r\n    return (\r\n        <USAMap customize={statesCustomConfig()} onClick={mapHandler} />\r\n    )\r\n}\r\n",[],"C:\\Users\\shane\\PycharmProjects\\4\\react-express-app\\client\\src\\components\\TableList.js",[],[],"C:\\Users\\shane\\PycharmProjects\\4\\react-express-app\\client\\src\\components\\PageSelector.js",["63"],[],"import {Pagination} from 'react-bootstrap';\r\n\r\nexport default function PageSelector({page, setPage, pageCount}){\r\n    let numbers = [page - 2, page - 1, page, page + 1, page + 2]\r\n    return (\r\n        <Pagination size=\"sm\"> \r\n            <Pagination.First onClick={() => setPage(1)}/>\r\n            <Pagination.Prev disabled={page === 1} onClick={() => setPage(page - 1)} />\r\n            {numbers.map((i) => {\r\n                if (i === page){\r\n                    return <Pagination.Item active onClick={() => setPage(i)}>{i} </Pagination.Item>\r\n                }\r\n                else if (i > 0 && i <= pageCount){\r\n                    return <Pagination.Item onClick={() => setPage(i)}>{i} </Pagination.Item>\r\n                }\r\n            })\r\n            }\r\n            <Pagination.Next disabled={page === pageCount} onClick={() => setPage(page + 1)} />\r\n            <Pagination.Last onClick={() => setPage(pageCount)}/>\r\n        </Pagination>\r\n    )\r\n}","C:\\Users\\shane\\PycharmProjects\\4\\react-express-app\\client\\src\\components\\Navigation.js",[],[],"C:\\Users\\shane\\PycharmProjects\\4\\react-express-app\\client\\src\\pages\\Requirements.js",[],[],"C:\\Users\\shane\\PycharmProjects\\4\\react-express-app\\client\\src\\pages\\Home.js",["64"],[],"import React, {useEffect, useState} from 'react'\r\nimport { InputGroup, Form, Container, Row, Col } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../styles/typography.scss';\r\nimport FederationForm from '../components/FederationForm.js';\r\nimport Map from '../components/Map.js';\r\nimport TableList from '../components/TableList.js';\r\nimport PageSelector from '../components/PageSelector.js';\r\nimport { filterDates, filterNames, filterStates, filterPages, setQueries, filterFederations} from \"../functions/filters.js\"\r\n\r\n// NOTE LEARN HOW TO MONGO UI INDEXING\r\nfunction Home(){\r\n  // useStates and initiatings\r\n\r\n  const [meetData, setMeetData] = useState([])\r\n  const [filteredMeetData, setFilteredMeetData] = useState([])\r\n  \r\n  const [search, setSearch] = useState('') \r\n\r\n  const [page, setPage] = useState(1)\r\n  const [pageCount, setPageCount] = useState(0)\r\n\r\n  const [federationOptions, setFederationOptions] = useState([])\r\n  const [federationFilter, setFederationFilter] = useState([])\r\n\r\n  const [stateList, setStateList] = useState([])\r\n\r\n  const itemsPerPage = 20\r\n\r\n  // part 1: initiates federation options\r\n  useEffect(() => {\r\n    fetch('/meets')\r\n    .then((response) => {\r\n      return response.json()\r\n    })\r\n    .then(data => {\r\n      setFederationOptions(data.fedOptions)\r\n      })\r\n  }, [])\r\n\r\n\r\n  const filters = {\r\n    federation: federationOptions // OR effect for categories\r\n  };\r\n  const queryParameters = setQueries(filters)\r\n\r\n  // part 2: federation filter => federation data\r\n  useEffect(() => {\r\n    fetch(`/meets?${queryParameters.toString()}`)\r\n      .then((response) => {\r\n        return response.json()\r\n      })\r\n      .then(data => {\r\n        setMeetData(data.info)\r\n        }\r\n      )\r\n  }, [federationOptions])\r\n\r\n  // regulates pages\r\n  useEffect(() => {\r\n    setPage(1)\r\n    setPageCount(Math.ceil(filteredMeetData.length / itemsPerPage))\r\n  }, [filteredMeetData])\r\n\r\n  // query filtering pt 2\r\n\r\n  useEffect(() => {\r\n    let t1 = filterNames(meetData, search) // filter names\r\n    let t2 = filterStates(t1, stateList)\r\n    let t3 = filterFederations(t2, federationFilter)\r\n    let t4 = filterDates(t3)\r\n    setFilteredMeetData(t4)\r\n\r\n  }, [search, meetData, stateList, federationFilter])\r\n\r\n  return (\r\n    <Container>\r\n      <h1 className='text-center mt-4 fw-bold'>Upcoming Lifting Meets</h1>\r\n      <h2 className='text-center'>Select States to Choose</h2>\r\n      {/* state and federation queries */}\r\n      <Row className=\"pb-4\">\r\n        <Col xs={1} md={2}>\r\n          <FederationForm federations={federationOptions} setFederationFilter={setFederationFilter} federationFilter={federationFilter}/>\r\n        </Col>\r\n        <Col xs={1}>\r\n          <Map stateList={stateList} setStateList={setStateList}/>\r\n        </Col>\r\n      </Row>\r\n      \r\n      {/* selected and filter */}\r\n      <Row className=\"pb-1\">\r\n        <Col className=\"align-self-end\" md={8}>\r\n          <h3> Selected States: {stateList.length > 0 ? stateList.map((state) => (state + \", \")) : \"ALL\"} </h3>\r\n          <h3> Selected Federations: {federationFilter.length > 0 ? federationFilter.map((fed) => (fed + \", \")) : \"ALL\"} </h3>\r\n        </Col>\r\n        <Col className=\"align-self-end\" md={4}>\r\n          <Form class=\"mt-auto pb-2\">\r\n            <InputGroup>\r\n              <Form.Control className=\"align-bottom\" onChange={(e) => setSearch(e.target.value)} placeholder='filter events'></Form.Control>\r\n            </InputGroup>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n      \r\n      {/* table */}\r\n      <TableList meetData={filterPages(filteredMeetData, page, itemsPerPage)} />\r\n      {/* pages */}\r\n      <Row>\r\n        <Col xs={6} md={4}> \r\n          <h3>Showing {(page - 1) * itemsPerPage + 1} to {page * itemsPerPage} out of {filteredMeetData.length} items</h3>\r\n        </Col>\r\n        <Col xs={6} md={{span:4, offset:4}}>\r\n          <PageSelector page={page} setPage={setPage} pageCount={pageCount} />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Home;","C:\\Users\\shane\\PycharmProjects\\4\\react-express-app\\client\\src\\App.js",[],[],"C:\\Users\\shane\\PycharmProjects\\4\\react-express-app\\client\\src\\functions\\filters.js",[],[],"C:\\Users\\shane\\PycharmProjects\\4\\react-express-app\\client\\src\\pages\\Equipment.js",[],[],{"ruleId":"65","severity":1,"message":"66","line":1,"column":16,"nodeType":"67","messageId":"68","endLine":1,"endColumn":25},{"ruleId":"65","severity":1,"message":"69","line":1,"column":27,"nodeType":"67","messageId":"68","endLine":1,"endColumn":35},{"ruleId":"70","severity":1,"message":"71","line":9,"column":30,"nodeType":"72","messageId":"73","endLine":9,"endColumn":32},{"ruleId":"74","severity":1,"message":"75","line":57,"column":6,"nodeType":"76","endLine":57,"endColumn":25,"suggestions":"77"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'queryParameters'. Either include it or remove the dependency array.","ArrayExpression",["78"],{"desc":"79","fix":"80"},"Update the dependencies array to be: [federationOptions, queryParameters]",{"range":"81","text":"82"},[1763,1782],"[federationOptions, queryParameters]"]